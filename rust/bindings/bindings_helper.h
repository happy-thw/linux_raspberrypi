/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Header that contains the code (mostly headers) for which Rust bindings
 * will be automatically generated by `bindgen`.
 *
 * Sorted alphabetically.
 */

#include <kunit/test.h>
#include <linux/errname.h>
#include <linux/slab.h>
#include <linux/refcount.h>
#include <linux/wait.h>
#include <linux/sched.h>
#include <linux/fs.h>
#include <linux/fs_parser.h>
#include <linux/cred.h>
#include <linux/device.h>
#include <linux/regmap.h>
#include <linux/platform_device.h>
#include <linux/poll.h>
#include <linux/uio.h>
#include <linux/uaccess.h>
#include <linux/delay.h>
#include <linux/of.h>
#include <linux/interrupt.h>
#include <linux/timekeeping.h>
#include <linux/completion.h>
#include <linux/miscdevice.h>
#include <linux/gpio/driver.h>
#include <linux/amba/bus.h>
#include <linux/serial_core.h>
#include <linux/clk.h>
#include <linux/i2c.h>


/* `bindgen` gets confused at certain things. */
const size_t BINDINGS_ARCH_SLAB_MINALIGN = ARCH_SLAB_MINALIGN;
const gfp_t BINDINGS_GFP_KERNEL = GFP_KERNEL;
const gfp_t BINDINGS___GFP_ZERO = __GFP_ZERO;

const loff_t BINDINGS_MAX_LFS_FILESIZE = MAX_LFS_FILESIZE;

const slab_flags_t BINDINGS_SLAB_RECLAIM_ACCOUNT = SLAB_RECLAIM_ACCOUNT;
const slab_flags_t BINDINGS_SLAB_MEM_SPREAD = SLAB_MEM_SPREAD;
const slab_flags_t BINDINGS_SLAB_ACCOUNT = SLAB_ACCOUNT;
